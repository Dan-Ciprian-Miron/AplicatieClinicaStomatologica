<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABNRJREFUaEPtm0uvFEUYho8gbDTBSxQF4kIQIyC/QGEDyJINupKLiRtI8CeouBQU
        FJSE2xJ2qLCEjRs1YUWiJIAaEy8Jl4ARVBDQ90mmk6Lydk9Vd/WcIc6bPMlJz1f11TdVU5ev60xNNNFE
        OXpAPCXWim3ifXFIHBVHBn/z7C2BDbb3nWaJ1eIT8b34N4O7gjKfilcEdY2t6J3t4jfhgmkDdb0nxqrn
        HxM7xJ/CNboEf4mdAl/TJn6fG8Vl4RrZB/jaJPA9Uj0uPheuUaMA3yPr7RfFD8I1ZJTQhmWiV60QvwvX
        gOngmnhZ9CKCvSGc4xx2CWZe+GDwrAvXRfGgGcalevZpUekJ4WxyoaeLDW8mqB+Fc9SGPgIGftOdJzKm
        /y+Ec9CWvgKGz0Qnsea5iodxU/wSPatICfhXQR3us2GwN2glhkebTcXX4gVxMHgWkhIwZamDutznTVwS
        j4pssZVzFTaxR1Qb/q4BI+raK5xNE7Q9S2zW2b+6yup4W4QqEXCld4Szq4N9/VyRLE49rqI6PhaxSgaM
        GD3Otg7W+SQxjJg0XCWOr8SDItRS8ZNw9ikBU3aJCEW78OXsHUyacbus1ghXgeNv8bwIRbBNk11KwMDk
        EwfNRHZLOHsHiYihIlPhCjvYJoZ6RAw7WKQGDGQ/5ohQ+HS2DmJpFBuNC8IVjuGbni9CHRDONmSloOfg
        pcGzJvaLUPhM7eXzolHMzq6gI97VMJTvCGfbhdsiHtr4drYx5MgaZ2syh66g43URap9wdiUgqRcK387O
        QUy1Il3qCsXwzc0TlZgNrwhnW4KLYoao9Ixwdg7Sw7UiR+wKxdCAMK+0XDi7koTHP3xfFc4uhphqdVi4
        QjGnRajXhLMrCT5C0QZnF0Oyv1a8EXCFYk6KUFuFsysJPkLRBmcXQ0y1GueAt4hQp4Szi2kMmO53hWLi
        If2qcHYlWS9CFRnSbSct1mBnVxK2lZWYsYtMWkzhrlBMvCzNFHwJzrYEvGPqZVnijZ0r5NggQnFEdHYl
        +EiEwrezcxBTrdiG0XuuYEy8tVws/hHOtgvU+ZwIlfqah1ieFLXqenjoo5fj5MICkXp4OCeGKieHFB8P
        HxZnhbNtw3fiIRFqt3C2DmIZKg7NrrDDJQAWiZyMSR1kLBaKULkJgFViqDgI5KZ44qsJNJTecfYpfCvi
        YPGRk7b9WbB6JOld4Sqpww0dhiLDL6dHsOVnEg9jlJOJAWJIFomA3CsMdQ7oqQ8F37grB3yGTdyriIk0
        N4vKW87G2dmJexuusibohXh4V6Lh/L7XiTcH8DfPwl1bqNmCw7/z1QRtz1bbVy3fCLaaXUUd1OV8NMGO
        r9WrFsSLKVfpMPgtsn6yBcwVZSjbdhPT+mUaYqh1ubxCo0+IzeJZEe6HKzGT8tkb4rjosls7JjqLoV3q
        Essf4oz4cgB/88zZ5kIOu/VQjsWVB64VOEfjAEfFEvPGPeLiCBdInMPphDaR0O9FBJ168B4FtKW3a0uV
        SJf+by6mVWIiS33d0Qf47nxjp41Y83it6RrVB/jqtM6WEEtB39eH2Rvjo9iyU0Js1jlANB0ScqEu6sw+
        CIxS7Jw4eHNkJMWSmiMDbClDWepIPs+Ok+gdMofxP3lA9U8efIbNWPfkRBONnaam/gN4X2dOWTthwQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>